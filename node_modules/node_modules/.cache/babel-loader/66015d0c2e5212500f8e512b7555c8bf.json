{"ast":null,"code":"var _jsxFileName = \"/home/frieda/Desktop/seir/unit2/React/blackjackapp/src/Components/User.js\";\nimport React, { useState } from 'react';\nimport Card from './Card';\n\nconst User = props => {\n  console.log('props', props);\n  const [cards, setCards] = useState([]);\n\n  const draw1Card = async () => {\n    const fetchDeck = await fetch(`https://deckofcardsapi.com/api/deck/${props.deckID}/draw/?count=1`);\n    const jsonDeck = await fetchDeck.json();\n    const cardCode = jsonDeck.cards[0].code;\n    const cardImg = jsonDeck.cards[0].image;\n    const fetchPile = await fetch(`https://deckofcardsapi.com/api/deck/${props.deckID}/pile/player/add/?cards=${cardCode}`);\n    const pileinfo = await fetchPile.json();\n    const fetchCard = await fetch(`https://deckofcardsapi.com/api/deck/${props.deckID}/pile/player/list/`);\n    const handInfo = await fetchCard.json();\n    const cardInfo = handInfo.piles.user.cards;\n    console.log(\"handinfo\", handInfo);\n    console.log(\"cardinfo\", cardInfo);\n    setCardsArr(cardInfo);\n  };\n\n  const cardsArr = cards.map(card => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: card.code,\n      image: card.image,\n      value: card.value,\n      suit: card.suit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Player\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: 'handleDeal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Deal\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      props.handleHit(draw1Card());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Hit\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: 'handleStay',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Stay\"), cardsArr);\n};\n\nexport default User;","map":{"version":3,"sources":["/home/frieda/Desktop/seir/unit2/React/blackjackapp/src/Components/User.js"],"names":["React","useState","Card","User","props","console","log","cards","setCards","draw1Card","fetchDeck","fetch","deckID","jsonDeck","json","cardCode","code","cardImg","image","fetchPile","pileinfo","fetchCard","handInfo","cardInfo","piles","user","setCardsArr","cardsArr","map","card","value","suit","handleHit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,SAAS,GAAG,YAAY;AAC1B,UAAMC,SAAS,GAAG,MAAMC,KAAK,CAC1B,uCAAsCP,KAAK,CAACQ,MAAO,gBADzB,CAA7B;AAGA,UAAMC,QAAQ,GAAG,MAAMH,SAAS,CAACI,IAAV,EAAvB;AAEA,UAAMC,QAAQ,GAAGF,QAAQ,CAACN,KAAT,CAAe,CAAf,EAAkBS,IAAnC;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAACN,KAAT,CAAe,CAAf,EAAkBW,KAAlC;AAGA,UAAMC,SAAS,GAAG,MAAMR,KAAK,CAC1B,uCAAsCP,KAAK,CAACQ,MAAO,2BAA0BG,QAAS,EAD5D,CAA7B;AAGA,UAAMK,QAAQ,GAAG,MAAMD,SAAS,CAACL,IAAV,EAAvB;AAEA,UAAMO,SAAS,GAAG,MAAMV,KAAK,CAC1B,uCAAsCP,KAAK,CAACQ,MAAO,oBADzB,CAA7B;AAGA,UAAMU,QAAQ,GAAG,MAAMD,SAAS,CAACP,IAAV,EAAvB;AACA,UAAMS,QAAQ,GAAGD,QAAQ,CAACE,KAAT,CAAeC,IAAf,CAAoBlB,KAArC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBgB,QAAxB;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiB,QAAxB;AACAG,IAAAA,WAAW,CAACH,QAAD,CAAX;AACF,GAvBF;;AA0BI,QAAMI,QAAQ,GAAGpB,KAAK,CAACqB,GAAN,CAAUC,IAAI,IAAI;AACjC,wBACE,oBAAC,IAAD;AACA,MAAA,GAAG,EAAEA,IAAI,CAACb,IADV;AAEA,MAAA,KAAK,EAAEa,IAAI,CAACX,KAFZ;AAGA,MAAA,KAAK,EAAEW,IAAI,CAACC,KAHZ;AAIA,MAAA,IAAI,EAAED,IAAI,CAACE,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOC,GARc,CAAjB;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,IAAA,OAAO,EAAE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAC3B,MAAAA,KAAK,CAAC4B,SAAN,CAAgBvB,SAAS,EAAzB;AAA6B,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHA,eAIA;AAAQ,IAAA,OAAO,EAAE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,EAKCkB,QALD,CADJ;AAUH,CAtDD;;AAuDA,eAAexB,IAAf","sourcesContent":["import React, {useState} from 'react'\nimport Card from './Card'\n\nconst User = (props) => {\nconsole.log('props',props)\n\nconst [cards, setCards] = useState([])\n\nconst draw1Card = async () => {\n    const fetchDeck = await fetch(\n      `https://deckofcardsapi.com/api/deck/${props.deckID}/draw/?count=1`\n    );\n    const jsonDeck = await fetchDeck.json();\n  \n    const cardCode = jsonDeck.cards[0].code;\n    const cardImg = jsonDeck.cards[0].image;\n  \n  \n    const fetchPile = await fetch(\n      `https://deckofcardsapi.com/api/deck/${props.deckID}/pile/player/add/?cards=${cardCode}`\n    );\n    const pileinfo = await fetchPile.json();\n  \n    const fetchCard = await fetch(\n      `https://deckofcardsapi.com/api/deck/${props.deckID}/pile/player/list/`\n    );\n    const handInfo = await fetchCard.json();\n    const cardInfo = handInfo.piles.user.cards;\n    console.log(\"handinfo\", handInfo);\n    console.log(\"cardinfo\", cardInfo);\n    setCardsArr(cardInfo)\n }   \n\n\n    const cardsArr = cards.map(card => {\n      return(\n        <Card\n        key={card.code}\n        image={card.image}\n        value={card.value}\n        suit={card.suit}\n        />)\n      })\n\n    \n\n\n    return(\n        <div>\n        <p>Player</p>\n        <button onClick={'handleDeal'}>Deal</button>\n        <button onClick={() => {props.handleHit(draw1Card())}}>Hit</button>\n        <button onClick={'handleStay'}>Stay</button>\n        {cardsArr}\n        </div>\n    )\n\n}\nexport default User"]},"metadata":{},"sourceType":"module"}