{"ast":null,"code":"var _jsxFileName = \"/home/frieda/Desktop/seir/unit2/React/blackjackapp/src/Components/Table.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Buttons from './Buttons';\nimport Card from './Card';\nimport User from './User';\nimport Dealer from './Dealer';\n\nconst Table = () => {\n  const [deck, setDeck] = useState([]);\n\n  const callingApi = async () => {\n    const res = await fetch(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\");\n    const info = await res.json();\n    setDeck(info);\n  };\n\n  useEffect(() => {\n    callingApi();\n  }, []);\n  const deckID = deck.deck_id;\n\n  const fetchShuffle = async () => {\n    const res = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/shuffle/`);\n    const jsonShuffle = await res.json();\n    console.log('shuffle result', jsonShuffle);\n  };\n\n  const [userCards, setUserCards] = useState([]);\n\n  const draw1CardUser = async () => {\n    const fetchDeck = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`);\n    const jsonDeck = await fetchDeck.json();\n    const cardCode = jsonDeck.cards[0].code;\n    const fetchPile = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/user/add/?cards=${cardCode}`);\n    const pileinfo = await fetchPile.json();\n    const fetchCard = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/user/list/`);\n    const handInfo = await fetchCard.json();\n    const cardInfo = handInfo.piles.user.cards;\n    console.log(\"handinfo\", handInfo);\n    console.log(\"cardinfo\", cardInfo);\n    setUserCards(cardInfo);\n  };\n\n  const userCardsArr = userCards.map(card => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: card.code,\n      image: card.image,\n      value: card.value,\n      suit: card.suit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    });\n  });\n  const [dealerCards, setDealerCards] = useState([]);\n\n  const draw1CardDealer = async () => {\n    const fetchDeck = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`);\n    const jsonDeck = await fetchDeck.json();\n    const cardCode = jsonDeck.cards[0].code;\n    const fetchPile = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/dealer/add/?cards=${cardCode}`);\n    const pileinfo = await fetchPile.json();\n    const fetchCard = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/dealer/list/`);\n    const handInfo = await fetchCard.json();\n    const cardInfo = handInfo.piles.dealer.cards;\n    console.log(\"handinfo\", handInfo);\n    console.log(\"cardinfo\", cardInfo);\n    setDealerCards(cardInfo);\n  };\n\n  const dealerCardsArr = dealerCards.map(card => {\n    return /*#__PURE__*/React.createElement(Dealer, {\n      key: card.code,\n      image: card.image,\n      value: card.value,\n      suit: card.suit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    });\n  });\n  console.log(dealerCardsArr);\n\n  const handleDeal = async () => {\n    await fetchShuffle();\n    await draw1CardUser();\n    await draw1CardDealer();\n    await draw1CardUser();\n    await draw1CardDealer();\n  };\n\n  const handleHit = () => {\n    draw1CardUser();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 22\n    }\n  }, \"Home\")), dealerCardsArr, userCardsArr, /*#__PURE__*/React.createElement(Buttons, {\n    handleHit: handleHit,\n    handleDeal: handleDeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/frieda/Desktop/seir/unit2/React/blackjackapp/src/Components/Table.js"],"names":["React","useState","useEffect","Link","Buttons","Card","User","Dealer","Table","deck","setDeck","callingApi","res","fetch","info","json","deckID","deck_id","fetchShuffle","jsonShuffle","console","log","userCards","setUserCards","draw1CardUser","fetchDeck","jsonDeck","cardCode","cards","code","fetchPile","pileinfo","fetchCard","handInfo","cardInfo","piles","user","userCardsArr","map","card","image","value","suit","dealerCards","setDealerCards","draw1CardDealer","dealer","dealerCardsArr","handleDeal","handleHit"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport Buttons from './Buttons'\nimport Card from './Card'\nimport User from './User'\nimport Dealer from './Dealer'\n\nconst Table = () => {\n\n    const [deck, setDeck] = useState([]);\n\n    const callingApi = async () => {\n      const res = await fetch(\n        \"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\"\n      );\n      const info = await res.json();\n      setDeck(info);\n    };\n  \n    useEffect(() => {\n      callingApi();\n    }, []);\n  \n    const deckID = deck.deck_id;\n\n\n    const fetchShuffle = async () => {\n        const res = await fetch(\n        `https://deckofcardsapi.com/api/deck/${deckID}/shuffle/`\n      );\n        const jsonShuffle = await res.json();\n        console.log('shuffle result', jsonShuffle)\n    }\n    \n    const [userCards, setUserCards] = useState([])\n    \n    const draw1CardUser = async () => {\n        const fetchDeck = await fetch(\n          `https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`\n        );\n        const jsonDeck = await fetchDeck.json();\n      \n        const cardCode = jsonDeck.cards[0].code;\n      \n        const fetchPile = await fetch(\n          `https://deckofcardsapi.com/api/deck/${deckID}/pile/user/add/?cards=${cardCode}`\n        );\n        const pileinfo = await fetchPile.json();\n      \n        const fetchCard = await fetch(\n          `https://deckofcardsapi.com/api/deck/${deckID}/pile/user/list/`\n        );\n        const handInfo = await fetchCard.json();\n        const cardInfo = handInfo.piles.user.cards;\n        console.log(\"handinfo\", handInfo);\n        console.log(\"cardinfo\", cardInfo);\n        setUserCards(cardInfo)\n     }   \n    \n    \n    const userCardsArr = userCards.map(card => {\n      return(\n          <Card\n            key={card.code}\n            image={card.image}\n            value={card.value}\n            suit={card.suit}\n            />)\n          })\n\n\n          const [dealerCards, setDealerCards] = useState([])\n    \n          const draw1CardDealer = async () => {\n              const fetchDeck = await fetch(\n                `https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`\n              );\n              const jsonDeck = await fetchDeck.json();\n            \n              const cardCode = jsonDeck.cards[0].code;\n            \n              const fetchPile = await fetch(\n                `https://deckofcardsapi.com/api/deck/${deckID}/pile/dealer/add/?cards=${cardCode}`\n              );\n              const pileinfo = await fetchPile.json();\n            \n              const fetchCard = await fetch(\n                `https://deckofcardsapi.com/api/deck/${deckID}/pile/dealer/list/`\n              );\n              const handInfo = await fetchCard.json();\n              const cardInfo = handInfo.piles.dealer.cards;\n              console.log(\"handinfo\", handInfo);\n              console.log(\"cardinfo\", cardInfo);\n              setDealerCards(cardInfo)\n           }   \n          \n          \n    const dealerCardsArr = dealerCards.map(card => {\n                return(\n                  <Dealer \n                  key={card.code}\n                  image={card.image}\n                  value={card.value}\n                  suit={card.suit}\n                  />)\n\n                })\n              \n      console.log(dealerCardsArr)\n        \n\n\n    const handleDeal = async () => {\n        await fetchShuffle()\n      \n        await draw1CardUser()\n        await draw1CardDealer()\n        await draw1CardUser()\n        await draw1CardDealer()\n    \n        }\n\n   \n    const handleHit = () => {\n        draw1CardUser()\n    }     \n\n    return(\n        <div>\n        <Link to='/'><button>Home</button></Link>\n        {dealerCardsArr}\n         {userCardsArr}\n        <Buttons handleHit={handleHit} handleDeal={handleDeal} />\n        </div>\n    )\n}\n\nexport default Table\n\n"]},"metadata":{},"sourceType":"module"}