{"ast":null,"code":"var _jsxFileName = \"/home/frieda/Desktop/seir/unit2/React/blackjackapp/src/Components/Table.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Buttons from \"./Buttons\";\nimport User from \"./User\";\nimport Dealer from \"./Dealer\";\n\nconst Table = () => {\n  const [deck, setDeck] = useState([]);\n\n  const callingApi = async () => {\n    const res = await fetch(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\");\n    const info = await res.json();\n    setDeck(info);\n  };\n\n  useEffect(() => {\n    callingApi();\n  }, []);\n  const deckID = deck.deck_id;\n\n  const fetchShuffle = async () => {\n    const res = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/shuffle/`);\n    const jsonShuffle = await res.json();\n  };\n\n  const [userCards, setUserCards] = useState([]);\n\n  const draw1CardUser = async () => {\n    const fetchDeck = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`);\n    const jsonDeck = await fetchDeck.json();\n    const cardCode = jsonDeck.cards[0].code;\n    const fetchPile = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/user/add/?cards=${cardCode}`);\n    const pileinfo = await fetchPile.json();\n    const fetchCard = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/user/list/`);\n    const handInfo = await fetchCard.json();\n    const cardInfo = handInfo.piles.user.cards;\n    setUserCards(cardInfo);\n  };\n\n  const userCardsArr = userCards.map(card => {\n    return /*#__PURE__*/React.createElement(User, {\n      key: card.code,\n      image: card.image,\n      value: card.value,\n      suit: card.suit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    });\n  });\n  const [dealerCards, setDealerCards] = useState([]);\n\n  const draw1CardDealer = async () => {\n    const fetchDeck = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`);\n    const jsonDeck = await fetchDeck.json();\n    const cardCode = jsonDeck.cards[0].code;\n    const fetchPile = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/dealer/add/?cards=${cardCode}`);\n    const pileinfo = await fetchPile.json();\n    const fetchCard = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/dealer/list/`);\n    const handInfo = await fetchCard.json();\n    const cardInfo = handInfo.piles.dealer.cards;\n    setDealerCards(cardInfo);\n  };\n\n  const dealerCardsArr = dealerCards.map(card => {\n    return /*#__PURE__*/React.createElement(Dealer, {\n      key: card.code,\n      image: card.image,\n      value: card.value,\n      suit: card.suit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    });\n  });\n\n  const dealerValues = () => {\n    const dealerValuesArr = dealerCards.map(card => {\n      if (card.value === \"JACK\" || card.value === \"QUEEN\" || card.value === \"KING\") {\n        card.value = 10;\n      }\n\n      if (card.value === \"ACE\") {\n        card.value = 11;\n      }\n\n      return Number(card.value);\n    });\n\n    if (dealerValuesArr.length > 0) {\n      let counter = 0;\n      let isEleven = dealerValuesArr.includes(11);\n      dealerValuesArr.forEach(value => {\n        counter += value;\n\n        if (isEleven && counter > 21) {\n          counter -= 10;\n        }\n      });\n      return counter;\n    }\n  };\n\n  const userValues = () => {\n    const userValuesArr = userCards.map(card => {\n      if (card.value === \"JACK\" || card.value === \"QUEEN\" || card.value === \"KING\") {\n        card.value = 10;\n      }\n\n      if (card.value === \"ACE\") {\n        card.value = 11;\n      }\n\n      return Number(card.value);\n    });\n\n    if (userValuesArr.length > 0) {\n      let counter = 0;\n      let isEleven = userValuesArr.includes(11);\n      userValuesArr.forEach(value => {\n        counter += value;\n\n        if (isEleven && counter > 21) {\n          counter -= 10;\n        }\n      });\n      return counter;\n    }\n  };\n\n  const handleDeal = async () => {\n    await fetchShuffle();\n    await draw1CardUser();\n    await draw1CardDealer();\n    await draw1CardUser();\n    await draw1CardDealer();\n  };\n\n  const handleHit = () => {\n    draw1CardUser();\n  };\n\n  const handleStand = () => {\n    if (dealerValues() > 16) {\n      console.log('no mas dealer!');\n    } else {\n      let i = 0;\n\n      while (dealerValues()) draw1CardDealer();\n    }\n  };\n\n  if (userValues() === 21) {\n    console.log(\"yay! BlackJack!\");\n    handleStand();\n  } else if (userValues() > 21) {\n    console.log('Dang you busted!');\n    handleStand();\n  }\n\n  if (dealerValues() === 21) {\n    console.log(\"aw darn, dealer got blackjack\");\n  } else if (dealerValues > 21) {\n    console.log('WOO! dealer busted!');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dealerHand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Dealer\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, \"Cards Total: \", dealerValues()), dealerCardsArr), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userHand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, userCardsArr, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, \"Player\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, \"Cards Total: \", userValues())), /*#__PURE__*/React.createElement(Buttons, {\n    handleHit: handleHit,\n    handleDeal: handleDeal,\n    handleStand: handleStand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/frieda/Desktop/seir/unit2/React/blackjackapp/src/Components/Table.js"],"names":["React","useState","useEffect","Link","Buttons","User","Dealer","Table","deck","setDeck","callingApi","res","fetch","info","json","deckID","deck_id","fetchShuffle","jsonShuffle","userCards","setUserCards","draw1CardUser","fetchDeck","jsonDeck","cardCode","cards","code","fetchPile","pileinfo","fetchCard","handInfo","cardInfo","piles","user","userCardsArr","map","card","image","value","suit","dealerCards","setDealerCards","draw1CardDealer","dealer","dealerCardsArr","dealerValues","dealerValuesArr","Number","length","counter","isEleven","includes","forEach","userValues","userValuesArr","handleDeal","handleHit","handleStand","console","log","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,+DADqB,CAAvB;AAGA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,IAAAA,OAAO,CAACI,IAAD,CAAP;AACD,GAND;;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMK,MAAM,GAAGP,IAAI,CAACQ,OAApB;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC/B,UAAMN,GAAG,GAAG,MAAMC,KAAK,CACpB,uCAAsCG,MAAO,WADzB,CAAvB;AAGA,UAAMG,WAAW,GAAG,MAAMP,GAAG,CAACG,IAAJ,EAA1B;AACD,GALD;;AAOA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMoB,aAAa,GAAG,YAAY;AAChC,UAAMC,SAAS,GAAG,MAAMV,KAAK,CAC1B,uCAAsCG,MAAO,gBADnB,CAA7B;AAGA,UAAMQ,QAAQ,GAAG,MAAMD,SAAS,CAACR,IAAV,EAAvB;AAEA,UAAMU,QAAQ,GAAGD,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBC,IAAnC;AAEA,UAAMC,SAAS,GAAG,MAAMf,KAAK,CAC1B,uCAAsCG,MAAO,yBAAwBS,QAAS,EADpD,CAA7B;AAGA,UAAMI,QAAQ,GAAG,MAAMD,SAAS,CAACb,IAAV,EAAvB;AAEA,UAAMe,SAAS,GAAG,MAAMjB,KAAK,CAC1B,uCAAsCG,MAAO,kBADnB,CAA7B;AAGA,UAAMe,QAAQ,GAAG,MAAMD,SAAS,CAACf,IAAV,EAAvB;AACA,UAAMiB,QAAQ,GAAGD,QAAQ,CAACE,KAAT,CAAeC,IAAf,CAAoBR,KAArC;AACAL,IAAAA,YAAY,CAACW,QAAD,CAAZ;AACD,GAnBD;;AAqBA,QAAMG,YAAY,GAAGf,SAAS,CAACgB,GAAV,CAAeC,IAAD,IAAU;AAC3C,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACV,IADZ;AAEE,MAAA,KAAK,EAAEU,IAAI,CAACC,KAFd;AAGE,MAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,MAAA,IAAI,EAAEF,IAAI,CAACG,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GAToB,CAArB;AAYA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCxC,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMyC,eAAe,GAAG,YAAY;AAClC,UAAMpB,SAAS,GAAG,MAAMV,KAAK,CAC1B,uCAAsCG,MAAO,gBADnB,CAA7B;AAGA,UAAMQ,QAAQ,GAAG,MAAMD,SAAS,CAACR,IAAV,EAAvB;AAEA,UAAMU,QAAQ,GAAGD,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBC,IAAnC;AAEA,UAAMC,SAAS,GAAG,MAAMf,KAAK,CAC1B,uCAAsCG,MAAO,2BAA0BS,QAAS,EADtD,CAA7B;AAGA,UAAMI,QAAQ,GAAG,MAAMD,SAAS,CAACb,IAAV,EAAvB;AAEA,UAAMe,SAAS,GAAG,MAAMjB,KAAK,CAC1B,uCAAsCG,MAAO,oBADnB,CAA7B;AAGA,UAAMe,QAAQ,GAAG,MAAMD,SAAS,CAACf,IAAV,EAAvB;AACA,UAAMiB,QAAQ,GAAGD,QAAQ,CAACE,KAAT,CAAeW,MAAf,CAAsBlB,KAAvC;AACAgB,IAAAA,cAAc,CAACV,QAAD,CAAd;AACD,GAnBD;;AAqBA,QAAMa,cAAc,GAAGJ,WAAW,CAACL,GAAZ,CAAiBC,IAAD,IAAU;AAC/C,wBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACV,IADZ;AAEE,MAAA,KAAK,EAAEU,IAAI,CAACC,KAFd;AAGE,MAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,MAAA,IAAI,EAAEF,IAAI,CAACG,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATsB,CAAvB;;AAWA,QAAMM,YAAY,GAAG,MAAM;AACzB,UAAMC,eAAe,GAAGN,WAAW,CAACL,GAAZ,CAAiBC,IAAD,IAAU;AAChD,UACEA,IAAI,CAACE,KAAL,KAAe,MAAf,IACAF,IAAI,CAACE,KAAL,KAAe,OADf,IAEAF,IAAI,CAACE,KAAL,KAAe,MAHjB,EAIE;AACAF,QAAAA,IAAI,CAACE,KAAL,GAAa,EAAb;AACD;;AACD,UAAIF,IAAI,CAACE,KAAL,KAAe,KAAnB,EAA0B;AACxBF,QAAAA,IAAI,CAACE,KAAL,GAAa,EAAb;AACD;;AAED,aAAOS,MAAM,CAACX,IAAI,CAACE,KAAN,CAAb;AACD,KAbuB,CAAxB;;AAeA,QAAIQ,eAAe,CAACE,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,UAAIC,OAAO,GAAG,CAAd;AAEA,UAAIC,QAAQ,GAAGJ,eAAe,CAACK,QAAhB,CAAyB,EAAzB,CAAf;AACAL,MAAAA,eAAe,CAACM,OAAhB,CAAyBd,KAAD,IAAW;AACjCW,QAAAA,OAAO,IAAIX,KAAX;;AACA,YAAIY,QAAQ,IAAID,OAAO,GAAG,EAA1B,EAA8B;AAC5BA,UAAAA,OAAO,IAAI,EAAX;AACD;AACF,OALD;AAOA,aAAOA,OAAP;AACD;AACF,GA7BD;;AA+BA,QAAMI,UAAU,GAAG,MAAM;AACvB,UAAMC,aAAa,GAAGnC,SAAS,CAACgB,GAAV,CAAeC,IAAD,IAAU;AAC5C,UACEA,IAAI,CAACE,KAAL,KAAe,MAAf,IACAF,IAAI,CAACE,KAAL,KAAe,OADf,IAEAF,IAAI,CAACE,KAAL,KAAe,MAHjB,EAIE;AACAF,QAAAA,IAAI,CAACE,KAAL,GAAa,EAAb;AACD;;AACD,UAAIF,IAAI,CAACE,KAAL,KAAe,KAAnB,EAA0B;AACxBF,QAAAA,IAAI,CAACE,KAAL,GAAa,EAAb;AACD;;AAED,aAAOS,MAAM,CAACX,IAAI,CAACE,KAAN,CAAb;AACD,KAbqB,CAAtB;;AAeA,QAAIgB,aAAa,CAACN,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,UAAIC,OAAO,GAAG,CAAd;AAEA,UAAIC,QAAQ,GAAGI,aAAa,CAACH,QAAd,CAAuB,EAAvB,CAAf;AACAG,MAAAA,aAAa,CAACF,OAAd,CAAuBd,KAAD,IAAW;AAC/BW,QAAAA,OAAO,IAAIX,KAAX;;AACA,YAAIY,QAAQ,IAAID,OAAO,GAAG,EAA1B,EAA8B;AAC5BA,UAAAA,OAAO,IAAI,EAAX;AACD;AACF,OALD;AAOA,aAAOA,OAAP;AACD;AACF,GA7BD;;AA+BA,QAAMM,UAAU,GAAG,YAAY;AAC7B,UAAMtC,YAAY,EAAlB;AAEA,UAAMI,aAAa,EAAnB;AACA,UAAMqB,eAAe,EAArB;AACA,UAAMrB,aAAa,EAAnB;AACA,UAAMqB,eAAe,EAArB;AACD,GAPD;;AASA,QAAMc,SAAS,GAAG,MAAM;AACtBnC,IAAAA,aAAa;AACd,GAFD;;AAGC,QAAMoC,WAAW,GAAG,MAAM;AACzB,QAAIZ,YAAY,KAAK,EAArB,EAAyB;AAExBa,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,KAHD,MAGO;AACH,UAAIC,CAAC,GAAG,CAAR;;AACA,aAAMf,YAAY,EAAlB,EACAH,eAAe;AAElB;AACF,GAVA;;AAYD,MAAIW,UAAU,OAAO,EAArB,EAAyB;AACvBK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAF,IAAAA,WAAW;AACZ,GAHD,MAGO,IAAIJ,UAAU,KAAK,EAAnB,EAAuB;AAC1BK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAF,IAAAA,WAAW;AACd;;AACD,MAAIZ,YAAY,OAAO,EAAvB,EAA2B;AACzBa,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,GAFD,MAEO,IAAKd,YAAY,GAAG,EAApB,EAAwB;AAC3Ba,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBd,YAAY,EAA7B,CAFF,EAGGD,cAHH,CAJF,eAUE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,YADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBmB,UAAU,EAA3B,CAHF,CAVF,eAgBE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEG,SADb;AAEE,IAAA,UAAU,EAAED,UAFd;AAGE,IAAA,WAAW,EAAEE,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAwBD,CA1ND;;AA4NA,eAAelD,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Buttons from \"./Buttons\";\nimport User from \"./User\";\nimport Dealer from \"./Dealer\";\n\nconst Table = () => {\n  const [deck, setDeck] = useState([]);\n\n  const callingApi = async () => {\n    const res = await fetch(\n      \"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\"\n    );\n    const info = await res.json();\n    setDeck(info);\n  };\n\n  useEffect(() => {\n    callingApi();\n  }, []);\n\n  const deckID = deck.deck_id;\n\n  const fetchShuffle = async () => {\n    const res = await fetch(\n      `https://deckofcardsapi.com/api/deck/${deckID}/shuffle/`\n    );\n    const jsonShuffle = await res.json();\n  };\n\n  const [userCards, setUserCards] = useState([]);\n\n  const draw1CardUser = async () => {\n    const fetchDeck = await fetch(\n      `https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`\n    );\n    const jsonDeck = await fetchDeck.json();\n\n    const cardCode = jsonDeck.cards[0].code;\n\n    const fetchPile = await fetch(\n      `https://deckofcardsapi.com/api/deck/${deckID}/pile/user/add/?cards=${cardCode}`\n    );\n    const pileinfo = await fetchPile.json();\n\n    const fetchCard = await fetch(\n      `https://deckofcardsapi.com/api/deck/${deckID}/pile/user/list/`\n    );\n    const handInfo = await fetchCard.json();\n    const cardInfo = handInfo.piles.user.cards;\n    setUserCards(cardInfo);\n  };\n\n  const userCardsArr = userCards.map((card) => {\n    return (\n      <User\n        key={card.code}\n        image={card.image}\n        value={card.value}\n        suit={card.suit}\n      />\n    );\n  });\n\n\n  const [dealerCards, setDealerCards] = useState([]);\n\n  const draw1CardDealer = async () => {\n    const fetchDeck = await fetch(\n      `https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`\n    );\n    const jsonDeck = await fetchDeck.json();\n\n    const cardCode = jsonDeck.cards[0].code;\n\n    const fetchPile = await fetch(\n      `https://deckofcardsapi.com/api/deck/${deckID}/pile/dealer/add/?cards=${cardCode}`\n    );\n    const pileinfo = await fetchPile.json();\n\n    const fetchCard = await fetch(\n      `https://deckofcardsapi.com/api/deck/${deckID}/pile/dealer/list/`\n    );\n    const handInfo = await fetchCard.json();\n    const cardInfo = handInfo.piles.dealer.cards;\n    setDealerCards(cardInfo);\n  };\n\n  const dealerCardsArr = dealerCards.map((card) => {\n    return (\n      <Dealer\n        key={card.code}\n        image={card.image}\n        value={card.value}\n        suit={card.suit}\n      />\n    );\n  });\n\n  const dealerValues = () => {\n    const dealerValuesArr = dealerCards.map((card) => {\n      if (\n        card.value === \"JACK\" ||\n        card.value === \"QUEEN\" ||\n        card.value === \"KING\"\n      ) {\n        card.value = 10;\n      }\n      if (card.value === \"ACE\") {\n        card.value = 11;\n      }\n\n      return Number(card.value);\n    });\n\n    if (dealerValuesArr.length > 0) {\n      let counter = 0;\n\n      let isEleven = dealerValuesArr.includes(11);\n      dealerValuesArr.forEach((value) => {\n        counter += value;\n        if (isEleven && counter > 21) {\n          counter -= 10;\n        }\n      });\n\n      return counter;\n    }\n  };\n\n  const userValues = () => {\n    const userValuesArr = userCards.map((card) => {\n      if (\n        card.value === \"JACK\" ||\n        card.value === \"QUEEN\" ||\n        card.value === \"KING\"\n      ) {\n        card.value = 10;\n      }\n      if (card.value === \"ACE\") {\n        card.value = 11;\n      }\n\n      return Number(card.value);\n    });\n\n    if (userValuesArr.length > 0) {\n      let counter = 0;\n\n      let isEleven = userValuesArr.includes(11);\n      userValuesArr.forEach((value) => {\n        counter += value;\n        if (isEleven && counter > 21) {\n          counter -= 10;\n        }\n      });\n\n      return counter;\n    }\n  };\n\n  const handleDeal = async () => {\n    await fetchShuffle();\n\n    await draw1CardUser();\n    await draw1CardDealer();\n    await draw1CardUser();\n    await draw1CardDealer();\n  };\n\n  const handleHit = () => {\n    draw1CardUser();\n  };\n   const handleStand = () => {\n    if (dealerValues() > 16) {\n      \n     console.log('no mas dealer!')\n    } else {\n        let i = 0\n        while(dealerValues())\n        draw1CardDealer(); \n        \n    }\n  };\n\n  if (userValues() === 21) {\n    console.log(\"yay! BlackJack!\");\n    handleStand()\n  } else if (userValues() > 21) {\n      console.log('Dang you busted!')\n      handleStand()\n  }\n  if (dealerValues() === 21) {\n    console.log(\"aw darn, dealer got blackjack\");\n  } else if ( dealerValues > 21) {\n      console.log('WOO! dealer busted!')\n  }\n\n\n\n  return (\n    <div className=\"table\">\n      <Link to=\"/\">\n        <button>Home</button>\n      </Link>\n      <div className=\"dealerHand\">\n        <p>Dealer</p>\n        <p>Cards Total: {dealerValues()}</p>\n        {dealerCardsArr}\n      </div>\n\n      <div className=\"userHand\">\n        {userCardsArr}\n        <p>Player</p>\n        <p>Cards Total: {userValues()}</p>\n      </div>\n\n      <Buttons\n        handleHit={handleHit}\n        handleDeal={handleDeal}\n        handleStand={handleStand}\n      />\n    </div>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}