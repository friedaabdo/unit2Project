{"ast":null,"code":"var _jsxFileName = \"/home/frieda/Desktop/seir/unit2/React/blackjackapp/src/Components/Table.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // import Buttons from './Buttons'\n\nimport User from './User';\nimport Dealer from './Dealer';\n\nconst Table = () => {\n  const [deck, setDeck] = useState([]);\n\n  const callingApi = async () => {\n    const res = await fetch(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\");\n    const info = await res.json();\n    setDeck(info);\n  };\n\n  useEffect(() => {\n    callingApi();\n  }, []);\n  const deckID = deck.deck_id;\n\n  const fetchShuffle = async () => {\n    const res = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/shuffle/`);\n    const jsonShuffle = await res.json();\n    console.log('shuffle result', jsonShuffle);\n  };\n\n  const [cards, setCards] = useState([]);\n\n  const draw1Card = async player => {\n    const fetchDeck = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`);\n    const jsonDeck = await fetchDeck.json();\n    const cardCode = jsonDeck.cards[0].code;\n    const fetchPile = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/player/add/?cards=${cardCode}`);\n    const pileinfo = await fetchPile.json();\n    const fetchCard = await fetch(`https://deckofcardsapi.com/api/deck/${deckID}/pile/player/list/`);\n    const handInfo = await fetchCard.json();\n    const cardInfo = handInfo.piles.player.cards; // console.log(\"handinfo\", handInfo);\n\n    console.log(\"cardinfo\", cardInfo);\n    setCards(cardInfo);\n  };\n\n  const cardsArr = cards.map(card => {\n    return /*#__PURE__*/React.createElement(User //maybe we copy paste this back to table and change card to user and dealer\n    , {\n      key: card.code,\n      image: card.image,\n      value: card.value,\n      suit: card.suit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    });\n  });\n\n  const handleHit = () => {\n    draw1Card('user');\n  };\n\n  const handleDeal = async () => {\n    await fetchShuffle();\n    await draw1Card('user');\n    await draw1Card('dealer');\n    await draw1Card('user');\n    await draw1Card('dealer');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(Dealer, {\n    cardsArr: cardsArr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(User, {\n    handleHit: handleHit,\n    deckID: deckID,\n    handleDeal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/frieda/Desktop/seir/unit2/React/blackjackapp/src/Components/Table.js"],"names":["React","useState","useEffect","Link","User","Dealer","Table","deck","setDeck","callingApi","res","fetch","info","json","deckID","deck_id","fetchShuffle","jsonShuffle","console","log","cards","setCards","draw1Card","player","fetchDeck","jsonDeck","cardCode","code","fetchPile","pileinfo","fetchCard","handInfo","cardInfo","piles","cardsArr","map","card","image","value","suit","handleHit","handleDeal"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\n// import Buttons from './Buttons'\nimport User from './User'\nimport Dealer from './Dealer'\n\nconst Table = () => {\n\n    const [deck, setDeck] = useState([]);\n\n    const callingApi = async () => {\n      const res = await fetch(\n        \"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\"\n      );\n      const info = await res.json();\n      setDeck(info);\n    };\n  \n    useEffect(() => {\n      callingApi();\n    }, []);\n  \n    const deckID = deck.deck_id;\n\n\n    const fetchShuffle = async () => {\n        const res = await fetch(\n        `https://deckofcardsapi.com/api/deck/${deckID}/shuffle/`\n      );\n    const jsonShuffle = await res.json();\n    console.log('shuffle result', jsonShuffle)\n    }\n    \n    const [cards, setCards] = useState([])\n    \n    const draw1Card = async (player) => {\n        const fetchDeck = await fetch(\n          `https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=1`\n        );\n        const jsonDeck = await fetchDeck.json();\n      \n        const cardCode = jsonDeck.cards[0].code;\n      \n        const fetchPile = await fetch(\n          `https://deckofcardsapi.com/api/deck/${deckID}/pile/player/add/?cards=${cardCode}`\n        );\n        const pileinfo = await fetchPile.json();\n      \n        const fetchCard = await fetch(\n          `https://deckofcardsapi.com/api/deck/${deckID}/pile/player/list/`\n        );\n        const handInfo = await fetchCard.json();\n        const cardInfo = handInfo.piles.player.cards;\n        // console.log(\"handinfo\", handInfo);\n        console.log(\"cardinfo\", cardInfo);\n        setCards(cardInfo)\n     }   \n    \n    \n        const cardsArr = cards.map(card => {\n          return(\n            <User                       //maybe we copy paste this back to table and change card to user and dealer\n            key={card.code}\n            image={card.image}\n            value={card.value}\n            suit={card.suit}\n            />)\n          })\n        \n\n    const handleHit = () => {\n        draw1Card('user')\n    }\n\n    const handleDeal = async () => {\n        await fetchShuffle()\n      \n        await draw1Card('user')\n        await draw1Card('dealer')\n        await draw1Card('user')\n        await draw1Card('dealer')\n    \n        }\n\n    return(\n        <div>\n        <Link to='/'><button>Home</button></Link>\n        <Dealer cardsArr={cardsArr}/>\n        <User handleHit={handleHit} deckID={deckID} handleDeal />\n        \n        </div>\n    )\n}\n\nexport default Table\n\n"]},"metadata":{},"sourceType":"module"}